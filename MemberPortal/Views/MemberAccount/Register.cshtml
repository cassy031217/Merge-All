@model  MemberPortal.Models.RegisterViewModel
@{
    ViewBag.Title = "Register";
    //Layout = "~/Views/Shared/_Register.cshtml";
    Layout = "~/Views/Shared/_LoginLayout.cshtml";


}
@*<div class="wrap-login100 p-l-50 p-r-50 p-t-72 p-b-50">
    <form class="login100-form validate-form">*@

        <div class="row">
            <div class="col-12">

                @using (Html.BeginForm("Register", "MemberAccount", new {ReturnUrl = ViewBag.ReturnUrl,  }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                {
                    @Html.AntiForgeryToken()
                    <form class="needs-validation" novalidate>
                        <div class="form-group row">
                            <div class="col-12 ">
                                <label for="state">Last Name <b class="text-danger">*</b></label>
                                @Html.TextBoxFor(m => m.LastName, new { @class = "form-control", autocomplete = "off" })
                                <small class="form-text text-dark"><i>@Html.ValidationMessageFor(m => m.LastName, "", new { @class = "text-danger" })</i></small>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-12 ">
                                <label for="state">First Name <b class="text-danger">*</b></label>
                                @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control", autocomplete = "off" })
                                <small class="form-text text-dark"><i>@Html.ValidationMessageFor(m => m.FirstName, "", new { @class = "text-danger" })</i></small>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-12 ">
                                <label for="state">Middle Name <b class="text-danger">*</b></label>
                                @Html.TextBoxFor(m => m.MiddlleName, new { @class = "form-control", autocomplete = "off" })
                                <small class="form-text text-dark"><i>@Html.ValidationMessageFor(m => m.MiddlleName, "", new { @class = "text-danger" })</i></small>
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-6">
                                <label for="state">BirthDate <b class="text-danger">*</b></label>
                                <input class="form-control" data-val="true" data-val-date="The field Birthdate must be a date." data-val-required="BirthDate is Required." id="Birthdate" name="Birthdate" type="date" />
                                <small class="form-text text-dark"><i>@Html.ValidationMessageFor(m => m.Birthdate, "", new { @class = "text-danger" })</i></small>
                            </div>

                            <div class="col-md-6 mb-6">
                                <label for="state">Sex <b class="text-danger">*</b></label>
                                <select class="form-control" id="Sex" name="Sex" required>
                                    @*<option>Select Gender</option>*@
                                    <option>Male</option>
                                    <option>Female</option>
                                </select>
                                <small class="form-text text-dark"><i>@Html.ValidationMessageFor(m => m.Sex, "", new { @class = "text-danger" })</i></small>
                            </div>
                        </div>
                        <br />
                        <div class="form-group row">
                            <div class="col-12 ">
                                <label for="state">Email Address <b class="text-danger">*</b></label>
                                @Html.EditorFor(model => model.UserEmailId, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                <small class="form-text text-dark"><i>@Html.ValidationMessageFor(model => model.UserEmailId, "", new { @class = "text-danger" })</i></small>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-12 ">
                                <label for="state">Username <b class="text-danger">*</b></label>
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control", autocomplete = "off" } })
                                <small class="form-text text-dark"><i>@Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })</i></small>
                                <small class="form-text text-muted">6-12 alphanumeric non-blank characters,case sensitive.</small>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-12 ">
                                <label for="state">Password <b class="text-danger">*</b></label>
                                @Html.PasswordFor(m => m.Password, new { @class = "form-control", autocomplete = "off" })
                                <small class="form-text text-dark"><i>@Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })</i></small>
                                <small class="form-text text-muted">6-12 alphanumeric non-blank characters,case sensitive.</small>
                            </div>
                        </div>
                        <div class="form-group row">
                            <div class="col-12 ">
                                <label for="state">Confirm password <b class="text-danger">*</b></label>
                                @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
                                <small class="form-text text-dark"><i>@Html.ValidationMessageFor(m => m.ConfirmPassword, "", new { @class = "text-danger" })</i></small>
                            </div>
                        </div>

                        <div class="form-group text-center ">
                            <div class="col-xs-12 pb-3 ">
                                <button class="btn btn-block btn-lg btn-info " type="submit">SIGN UP</button>
                            </div>
                        </div>
                        <div class="form-group mb-0 mt-2 ">
                            <div class="col-sm-12 text-center ">
                                Already have an account? <a href="@Url.Action("Login", "MemberAccount")" class="text-info ml-1 "><b>Sign In</b></a>
                            </div>
                        </div>
                    </form>
                }

            </div>
        </div>

    @*</form>
</div>*@
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
